version: '3.7'
x-othentic-cli: &othentic-cli
  env_file:
    - .env
  build:
    context: .
    dockerfile: ./Dockerfile
services:
  aggregator:
    <<: *othentic-cli
    command: ["node", "aggregator", "--json-rpc", "--l1-chain", "holesky", "--l2-chain", "base-sepolia", "--metrics"]
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY_AGGREGATOR}
    ports:
      - "8545:8545"
      - "9876:9876"
    networks:
      p2p:
        ipv4_address: 172.16.0.69
  syncer:
    <<: *othentic-cli
    command: [
      "node",
      "sync",
      "--sync-interval",
      "12h",
      "--l1-chain", "holesky", "--l2-chain", "base-sepolia"
    ]
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY_SYNCER}
      - ATTESTATION_CENTER_ADDRESS=${ATTESTATION_CENTER_ADDRESS}
      - AVS_GOVERNANCE_ADDRESS=${AVS_GOVERNANCE_ADDRESS}
    networks:
      p2p:
        ipv4_address: 172.16.0.6  
  attester:
    <<: *othentic-cli
    depends_on:
      - aggregator
    command: [
      "node",
      "attester",
      "/ip4/172.16.0.69/tcp/9876/p2p/${OTHENTIC_BOOTSTRAP_ID}",
      "--avs-webapi",
      "http://172.16.0.42",
      "--l1-chain", "holesky",
      "--l2-chain", "base-sepolia",
    ]
    environment:
      - PRIVATE_KEY=${PRIVATE_KEY_ATTESTER}
      - TASK_PERFORMER=0x0000000000000000000000000000000000000000
    volumes:
      - /app:/app
    networks:
      p2p:
        ipv4_address: 172.16.0.2  
  validation-service:
    build:
      context: ./Validation_Service
      dockerfile: ./Dockerfile
    env_file:
      - .env
    networks:
      p2p:
        ipv4_address: 172.16.0.42
  # prometheus:
  #   image: prom/prometheus:latest
  #   container_name: prometheus
  #   volumes:
  #     - ./prometheus.yaml:/etc/prometheus/prometheus.yaml  # Bind mount the config file
  #   ports:
  #     - "9090:9090"  # Expose Prometheus on port 9090
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yaml'  # Specify the config file location
  #   restart: unless-stopped
  #   networks:
  #     p2p:
  #       ipv4_address: 172.16.0.102
  
  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   restart: unless-stopped
  #   ports:
  #     - '3000:3000'
  #   networks:
  #     p2p:
  #       ipv4_address: 172.16.0.103
  #   environment:
  #   - GF_SECURITY_ADMIN_USER=admin
  #   - GF_SECURITY_ADMIN_PASSWORD=admin #Here you can set the password for the admin user
  #   volumes:
  #     - ./grafana/provisioning:/etc/grafana/provisioning
  #     - ./grafana/dashboards:/var/lib/grafana/dashboards
  #     - grafana-storage:/var/lib/grafana

volumes:
  grafana-storage: {}

networks:
  p2p:
    driver: bridge
    ipam:
     config:
       - subnet: 172.16.0.0/16
         gateway: 172.16.0.1
